// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc948.RobotBuilderTest;

import com.kauailabs.navx.frc.AHRS;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SPI;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.VictorSP;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController lifterLiftMoter;
    public static Encoder lifterLiftEncoder;
    public static SpeedController driveLeftFrontMotor;
    public static SpeedController driveRightFrontMotor;
    public static SpeedController driveLeftRearMotor;
    public static SpeedController driveRightRearMotor;
    public static RobotDrive driveDriveTrain;
    //public static AnalogGyro driveGyro;
    
    public static AHRS navx;
    //public static ContinuousGyro gyro;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        lifterLiftMoter = new VictorSP(0);
        LiveWindow.addActuator("Lifter", "LiftMoter", (VictorSP) lifterLiftMoter);
        lifterLiftMoter.setInverted(false);
        lifterLiftEncoder = new Encoder(0, 1, false, EncodingType.k4X);
        LiveWindow.addSensor("Lifter", "LiftEncoder", lifterLiftEncoder);
        lifterLiftEncoder.setDistancePerPulse(1.0);
        lifterLiftEncoder.setPIDSourceType(PIDSourceType.kRate);
        driveLeftFrontMotor = new VictorSP(1);
        LiveWindow.addActuator("Drive", "LeftFrontMotor", (VictorSP) driveLeftFrontMotor);
        driveLeftFrontMotor.setInverted(false);
        driveRightFrontMotor = new VictorSP(3);
        LiveWindow.addActuator("Drive", "RightFrontMotor", (VictorSP) driveRightFrontMotor);
        driveRightFrontMotor.setInverted(false);
        driveLeftRearMotor = new VictorSP(4);
        LiveWindow.addActuator("Drive", "LeftRearMotor", (VictorSP) driveLeftRearMotor);
        driveLeftRearMotor.setInverted(false);
        driveRightRearMotor = new VictorSP(5);
        LiveWindow.addActuator("Drive", "RightRearMotor", (VictorSP) driveRightRearMotor);
        driveRightRearMotor.setInverted(false);
        driveDriveTrain = new RobotDrive(driveLeftFrontMotor, driveLeftRearMotor,
              driveRightFrontMotor, driveRightRearMotor);
        
        driveDriveTrain.setSafetyEnabled(true);
        driveDriveTrain.setExpiration(0.1);
        driveDriveTrain.setSensitivity(0.5);
        driveDriveTrain.setMaxOutput(1.0);

        //driveGyro = new AnalogGyro(0);
        //LiveWindow.addSensor("Drive", "Gyro", driveGyro);
        //driveGyro.setSensitivity(0.007);
        
        navx = new AHRS(SPI.Port.kMXP);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
