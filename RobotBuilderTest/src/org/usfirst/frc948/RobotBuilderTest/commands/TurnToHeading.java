// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc948.RobotBuilderTest.commands;
import edu.wpi.first.wpilibj.PIDController;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc948.RobotBuilderTest.Robot;
import org.usfirst.frc948.RobotBuilderTest.RobotMap;

/**
 *
 */
public class TurnToHeading extends Command {

    private double desiredHeading;
    private double maxPower;
    private final double P_TERM = 0.05;
     
    public TurnToHeading(double desiredHeading, double power) {
        this.desiredHeading = desiredHeading;
        this.maxPower = power;
        requires(Robot.drive);
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	double error = this.desiredHeading - RobotMap.navx.getAngle();
    	double currentPower = P_TERM * error;
    	if(currentPower < -this.maxPower) {
    		currentPower = this.maxPower;
    	} else if(currentPower > this.maxPower) {
    		currentPower = this.maxPower;
    	}
    	Robot.drive.drive(currentPower, -currentPower);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
